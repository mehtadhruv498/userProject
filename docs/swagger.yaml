basePath: /
definitions:
  example_userproject_pkg_userData_Models.User:
    properties:
      address:
        type: string
      country:
        type: string
      dob:
        type: string
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is a sample Rest API server.
  title: Go + Gin + Gorm User API
  version: "1.0"
paths:
  /api/v1/user:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/example_userproject_pkg_userData_Models.User'
            type: array
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/example_userproject_pkg_userData_Models.User'
      produces:
      - application/json
      responses:
        "200":
          description: Created User Successfully
          schema:
            type: string
      summary: Create a User
      tags:
      - users
  /api/v1/user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user with the id given
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deleted User Successfully
          schema:
            type: string
      summary: Delete a User
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Gets details of a particular user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/example_userproject_pkg_userData_Models.User'
            type: array
      summary: Get a particluar user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update the details of a user with a particular id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Updated User Successfully
          schema:
            type: string
      summary: Update User details
      tags:
      - users
swagger: "2.0"
